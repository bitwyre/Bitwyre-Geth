services:
  local:
    build:
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    container_name: local-geth
    env_file:
      - .env
    command: >
      --mainnet
      --http
      --http.addr=0.0.0.0
      --authrpc.jwtsecret=/jwtsecret
      --authrpc.port 8551
      --authrpc.addr=0.0.0.0
      --authrpc.vhosts=*
      --config /config/config.toml
      --cache 8000
      --metrics
      --metrics.influxdb
      --metrics.influxdb.endpoint "http://influxdb:8086"
      --metrics.influxdb.username "geth"
      --metrics.influxdb.password "mypassword"
      --syncmode snap
    ports:
      - 30303:30303
      - 8545:8545
      - 8551:8551
    volumes:
      - ./data/ethereum:/root/.ethereum
      - ./config:/config
      # ETH2 beacon chain node secret file for AuthRPC.
      # Share with your beacon client.
      # Generate this file: openssl rand -hex 32 > jwtsecret
      # and share to beacon chain node.
      - ./jwtsecret:/jwtsecret
      - ./logs:/root

  # Beacon chain node using Lighthouse.
  # This node does not publicly expose any RPC servers
  # and only connects to above nodes using authrpc.
  lighthouse:
    container_name: lighthouse
    image: sigp/lighthouse
    restart: unless-stopped

    command: >
      lighthouse
      bn
       --network
       mainnet
       --http
       --http-address=0.0.0.0
       --http-port=5052
       --execution-endpoint=http://local:8551
       --execution-jwt=/jwtsecret
       --checkpoint-sync-url=https://beaconstate-mainnet.chainsafe.io
       --disable-deposit-contract-sync
    ports:
      - 5052:5052
    environment:
      # Do a full backtrace when lighthouse crashes
      - RUST_BACKTRACE=full
    volumes:
      - ./data/lighthouse:/root/.lighthouse
      - ./jwtsecret:/jwtsecret

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    depends_on:
      - influxdb
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./provisioning/datasources:/etc/grafana/provisioning/datasources

  influxdb:
    image: influxdb:1.7.1
    container_name: influxdb
    ports:
      - "8086:8086"
    volumes:
      - influxdb_data:/var/lib/influxdb2
    environment:
      - INFLUXDB_ADMIN_ENABLED=true
      - INFLUXDB_ADMIN_USER=${INFLUXDB_ADMIN_USERNAME}
      - INFLUXDB_ADMIN_PASSWORD=${INFLUXDB_ADMIN_PASSWORD}
      - INFLUXDB_DB=geth
      - INFLUXDB_REPORTING_DISABLED=true
      - INFLUXDB_USER=${INFLUXDB_USERNAME}
      - INFLUXDB_USER_PASSWORD=${INFLUXDB_PASSWORD}
volumes:
  grafana_data:
  influxdb_data:
